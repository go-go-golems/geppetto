package templates

import "path/filepath"

type ArtifactGroup struct {
    DirPath string
    RelPath string
    Files   []string
}

templ Index(groups []ArtifactGroup, baseDir string) {
    @Layout("Artifacts") {
        <div class="row">
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">
                        <h5>Artifact Directories</h5>
                    </div>
                    <div class="card-body artifact-list">
                        if len(groups) == 0 {
                            <p class="text-muted">No artifacts found in { baseDir }</p>
                        } else {
                            <div class="list-group">
                                for _, group := range groups {
                                    <a 
                                        href={ templ.SafeURL("/?dir=" + group.RelPath) }
                                        class="list-group-item list-group-item-action"
                                        hx-get={ "/api/artifacts?dir=" + group.RelPath }
                                        hx-target="#file-list"
                                        hx-swap="innerHTML"
                                    >
                                        if group.RelPath == "" || group.RelPath == "." {
                                            <strong>./</strong> (root)
                                        } else {
                                            <strong>{ group.RelPath }</strong>
                                        }
                                        <br/>
                                        <small class="text-muted">{ string(rune(len(group.Files))) } files</small>
                                    </a>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <div class="card">
                    <div class="card-header">
                        <h5>Files</h5>
                    </div>
                    <div class="card-body" id="file-list">
                        <p class="text-muted">Select a directory to view files</p>
                    </div>
                </div>
                <div class="card mt-3" id="file-content-card" style="display: none;">
                    <div class="card-header">
                        <h5 id="file-title">File Content</h5>
                    </div>
                    <div class="card-body p-0" id="file-content">
                    </div>
                </div>
            </div>
        </div>
    }
}

templ FileList(files []string, dirPath string) {
    <div class="list-group">
        for _, file := range files {
            <a 
                href="#"
                class="list-group-item list-group-item-action"
                hx-get={ "/api/file?path=" + filepath.Join(dirPath, file) }
                hx-target="#file-content"
                hx-swap="innerHTML"
                onclick="document.getElementById('file-content-card').style.display='block'; document.getElementById('file-title').textContent='{file}'; return false;"
            >
                { file }
            </a>
        }
    </div>
}

templ FileContent(content, filename string) {
    <div class="file-content p-3">
        <pre><code class={ getLanguageClass(filename) }>{ content }</code></pre>
    </div>
}

func getLanguageClass(filename string) string {
    ext := filepath.Ext(filename)
    switch ext {
    case ".yaml", ".yml":
        return "language-yaml"
    case ".json":
        return "language-json"
    case ".md":
        return "language-markdown"
    case ".log", ".jsonl":
        return "language-json"
    default:
        return "language-plaintext"
    }
}

