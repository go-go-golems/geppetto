name: summary
short: Transform general framework documentation into a concise version.
flags:
  - name: additional
    type: stringList
    help: Additional instructions.
    default: []
  - name: additional_system
    type: string
    help: Additional prompt instructions.
    default: ""
  - name: context
    type: fileList
    help: Additional context from files.
  - name: with_output_structure
    type: bool
    help: Include the output structure at the end of the documentation.
    default: false
  - name: examples
    type: fileList
    help: A set of example files to illustrate usage.
  - name: codes
    type: fileList
    help: A set of code files relevant to the documentation.
  - name: docs
    type: fileList
    help: A set of source documentation files.
  - name: guidelines
    type: fileList
    help: A set of guideline files to provide structured guidance.
  - name: inputs
    type: fileList
    help: A set of input files that describe the functionality.
    required: true
  - name: bracket
    type: bool
    help: bracket the output with the additional information
    default: true
system-prompt: |
  You are an expert in simplifying complex technical documentation. Your role is to transform detailed framework documentation into a concise, easily understandable format for new users without a technical background. You will use additional code examples, guidelines, and source documentation to create personalized and clear content. Maintain a professional tone and explain technical terms when they are used. The documentation should be adaptable for updates and expansions.
  {{ .additional_system }}
prompt: |
  {{ define "context" -}}
  {{ .query | join " " }}
  {{ if .additional }}Additional instructions:
  {{ .additional | join "\n" }}{{ end }}
  {{- end }}

  {{ define "fileSection" -}}
  {{- range . -}}
  ---
  Path: {{ .Path }}
  {{ .Content }}
  ---
  {{- end }}
  {{- end }}

  {{- define "outputStructure" -}}
  {{ if .with_output_structure }}
  ### Output Structure

  The output structure should reflect the intent of the documentation, which is to be practical, user-friendly, and focused on enabling new developers to quickly become productive. The structure should include:

  1. **Introduction**
     - Overview of the technology
     - Objectives of the documentation

  2. **Getting Started**
     - Prerequisites and setup instructions
     - Configuration guidelines

  3. **Key Components**
     - Description of each component
     - Practical applications and use cases

  4. **Usage Examples**
     - Real-world scenarios
     - Step-by-step usage instructions

  5. **Troubleshooting**
     - Common issues and their resolutions
     - Tips for navigating challenges

  6. **Further Resources**
     - Links to in-depth documentation
     - Community forums and support networks
  {{- end }}
  {{- end }}

  {{ define "instructions" -}}
  Please transform the provided long-form general framework documentation into a concise version suitable for new users and for use as prompts for large language models. Utilize the additional code from our codebase as a foundation for examples, ensuring that the output is personalized and easily understandable.

  Your task involves two main steps:

  1. Outline the structure of your response, ensuring that it is organized and that key information is highlighted.
  2. Fill in the details within this structure, providing clear and concise explanations without unnecessary complexity.

  Remember to maintain a professional tone and to explain any technical terms that are used. The goal is to make the documentation accessible to new users who may not have a technical background.
  
  Go more into detail of how to use individual technical features such as functions and classes,
  we want to be exhaustive so that a new developer knows everything there is to know about these features.
  Be exhaustive covering all the options and things to note.
  
  Provide concise code examples for each section (in the section itself).
  
  Use only information from the input files for the output.
  {{- end }}
  
  {{ template "instructions" . }}

  {{ template "context" . }}

  {{ if .context }}
  ### Additional Context
  {{ template "fileSection" .context }}
  {{ end }}

  {{ if .examples }}
  ### Example Files
  
  Use these files as examples of similar documentation. Try to mirror the structure and style.
  Don't use the content of these files as input, only use their structure.
  
  {{ template "fileSection" .examples }}
  {{ end }}

  {{ if .codes }}
  ### Code
  
  These are relevant source files.
  
  {{ template "fileSection" .codes }}
  {{ end }}

  {{ if .docs }}
  ### Additional documentation
  
  These are relevant additional documentation files.
  
  {{ template "fileSection" .docs }}
  {{ end }}

  {{ template "outputStructure" . }}

  {{ if .guidelines }}
  ### Guideline Files
  
  Use these files as additional guidelines on how to write documentation.
  {{ template "fileSection" .guidelines }}
  {{ end }}

  ### Input files

  These files are the inputs from which you should create the documentation.
  {{ template "fileSection" .inputs }}
  
  {{ if .bracket }}
  {{ template "instructions" . }}
  {{ template "context" . }}
  {{ end }}