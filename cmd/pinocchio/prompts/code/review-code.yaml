name: review-code
short: Provide a detailed code review.
flags:
  - name: code
    type: fileList
    help: The code snippet to review
    required: true
  - name: additional_system
    type: string
    help: Additional system prompt
    default: ""
  - name: additional
    type: string
    help: Additional prompt
    default: ""
  - name: context
    type: fileList
    help: Additional context from files
  - name: concise
    type: bool
    help: Give concise answers
    default: true
  - name: use_bullets
    type: bool
    help: Use bullet points in the explanation
    default: true
  - name: use_keywords
    type: bool
    help: Use keywords in the explanation
    default: true
system-prompt: |
    You are an advanced language model with expertise in {{ .language }}. You are capable of providing a detailed code review, including readability, security, modern practices, bug detection, and documentation. You write clearly and concisely.
    {{ .additional_system }}
prompt: |
  Please start by providing a concise bullet-point list explaining what the provided code snippet does. Then, based on the programming language used and the inferred patterns and style of the code, create a list of more precise guidelines and cases to check for each of the following areas:

  1. Code readability and maintainability
  2. Security
  3. Modern practices
  4. Bug Detection
  5. Documentation

  After creating these guidelines, proceed to review the code snippet,
  analyzing it for cleanliness, style, security,
  adherence to modern idioms and practices, bug presence, and proper documentation.
  
  Here is the code:

  ---
  {{ range .code }}
  Code Path: {{ .Path }}
  ---
  {{ .Content }}
  ---
  {{- end }}
  ---

  Your response should follow this structure:

  1. Code Explanation: 
     
     A concise bullet-point list explaining what the provided code snippet does.

  2. Guidelines and Cases:
     A clear and concise bullet point list of precise guidelines and cases to check for each of the following areas:
        code readability and maintainability, security, modern practices, bug detection, and documentation.
     Be exhaustive about good practices specific to that stack and code.
     Don't list obvious advice such as "good modularization" or "clear naming".

  3. Code Review:
     - Introduction:
        A brief overview of your general impressions of the code, as bullet list.
     - Code Readability and Maintainability:
        Detailed analysis of the code's readability and maintainability,
        including specific examples and suggestions for improvement, as bullet list.
     - Security:
        Detailed analysis of any potential security issues in the code,
        including specific examples and suggestions for mitigation, as bullet list.
     - Modern Practices: 
        Detailed analysis of the code's use of modern programming idioms and practices, including specific examples and suggestions for improvement, as bullet list.
     - Bug Detection: 
        Detailed analysis of any potential bugs or logical errors in the code, including specific examples and suggestions for fixes, as bullet list.
     - Documentation: 
        Detailed analysis of the code's documentation, including specific examples and suggestions for improvement, as bullet list.
     - Conclusion:
        A summary of your findings and overall recommendations for improving the code, as bullet list.

  Be an aggressive and thorough reviewer. Don't be afraid to point out any issues you find, even if they are minor.
  Don't give obvious feedback about things looking good, etc... Only list issues that need to be addressed.
  Be sure to provide specific examples and suggestions for improvement if they are not obvious.
  
  {{ if .additional }}
  Additional instructions:
  {{ .additional }}
  {{ end }}
  
  {{ if .context}}Additional Context:
  {{ range .context }}
  Path: {{ .Path }}
  ---
  {{ .Content }}
  ---
  {{- end }}
  {{ end }}
  
  {{ if .concise -}}
  Give a concise explanation, answer in a single sentence if possible, skip unnecessary explanations. This instruction doesn't affect the docstring.
  {{- end }}
  {{ if .use_bullets -}}
  Use bullet points in the explanation. This instruction doesn't affect the docstring.
  {{- end }}
  {{ if .use_keywords -}}
  Use keywords in the explanation, not full sentences. This instruction doesn't affect the docstring.
  {{- end }}
